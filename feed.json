{
    "version": "https://jsonfeed.org/version/1",
    "title": "清街余晖",
    "subtitle": "",
    "icon": "https://pustea-wls.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://pustea-wls.github.io",
    "items": [
        {
            "id": "https://pustea-wls.github.io/2022/06/28/aspnetcore%E8%BF%87%E6%BB%A4%E5%99%A8%E4%B9%8BResourceFilter/",
            "url": "https://pustea-wls.github.io/2022/06/28/aspnetcore%E8%BF%87%E6%BB%A4%E5%99%A8%E4%B9%8BResourceFilter/",
            "title": "aspnetcore过滤器系列一：ResourceFilter",
            "date_published": "2022-06-28T08:00:00.000Z",
            "content_html": "<p><code>aspnetcore中的过滤器是Aop编程的一种实现形式。记录下学习的过程，方便以后查阅</code></p>\n<h2 id=\"resourcefilter同步实现\"><a class=\"anchor\" href=\"#resourcefilter同步实现\">#</a> ResourceFilter 同步实现</h2>\n<p>我们新建一个 WebApi 项目，然后创建一个自定义实现的 ResourceFilter (资源过滤器)</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class CustomResourceFilterAttribute : Attribute, IResourceFilter</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        &#x2F;&#x2F; 资源进入之前</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        public void OnResourceExecuting (ResourceExecutingContext context)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            Console.WriteLine (&quot;请求之前&quot;);</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        &#x2F;&#x2F; 资源退出之后</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        public void OnResourceExecuted (ResourceExecutedContext context)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Console.WriteLine (&quot;请求之后&quot;);</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    &#125;</pre></td></tr></table></figure><p>上面自定义的资源过滤器继承了特性和实现了资源过滤器的接口</p>\n<h3 id=\"总结\"><a class=\"anchor\" href=\"#总结\">#</a> 总结</h3>\n<p><code>在框架中凡是系统提供的接口都是给开发者做扩展使用的</code> <br />\n实现完自定义的资源过滤器后，将他们标注在相关的 action 上面</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[ApiController]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    [Route (&quot;&#x2F;api&#x2F;[action]&quot;)]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    public class ResourceController : ControllerBase</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        private readonly ILogger&lt;ResourceController&gt; _logger;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        public ResourceController (ILogger&lt;ResourceController&gt; logger)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            _logger &#x3D; logger;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Console.WriteLine (&quot;构造函数&quot;);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        [HttpGet]</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        [CustomResourceFilter]</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        public string ResourceIndex ()</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            Console.WriteLine (&quot;方法执行中&quot;);</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            return &quot;success&quot;;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;</pre></td></tr></table></figure><h3 id=\"运行项目\"><a class=\"anchor\" href=\"#运行项目\">#</a> 运行项目</h3>\n<p><img data-src=\"resourceFilter-1.jpg\" alt=\"\" /></p>\n<h3 id=\"结论\"><a class=\"anchor\" href=\"#结论\">#</a> 结论</h3>\n<p><code>OnResourceExecuting-》控制器构造函数-》调用的API(action)-》OnResourceExecuted</code></p>\n<h2 id=\"resourcefilter异步实现\"><a class=\"anchor\" href=\"#resourcefilter异步实现\">#</a> ResourceFilter 异步实现</h2>\n<p>同步和异步原理和步骤上是一样的，书写的代码有所不同.</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class CustomAsyncResourceFilterAttribute : Attribute, IAsyncResourceFilter</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        public async Task OnResourceExecutionAsync (ResourceExecutingContext context, ResourceExecutionDelegate next)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            Console.WriteLine (&quot;执行之前 Async&quot;);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            ResourceExecutedContext resource &#x3D; await next.Invoke ();</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            Console.WriteLine (&quot;执行之后 Async&quot;);</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#125;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[ApiController]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    [Route (&quot;&#x2F;api&#x2F;[action]&quot;)]</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    public class ResourceController : ControllerBase</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        private readonly ILogger&lt;ResourceController&gt; _logger;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        public ResourceController (ILogger&lt;ResourceController&gt; logger)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            _logger &#x3D; logger;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            Console.WriteLine (&quot;构造函数&quot;);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        [HttpGet]</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        [CustomAsyncResourceFilterAttribute]</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        public string ResourceAsyncIndex () </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            Console.WriteLine (&quot;方法执行中&quot;);</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            return &quot;success&quot;;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;</pre></td></tr></table></figure><h3 id=\"resourcefilter在业务上能用来做什么\"><a class=\"anchor\" href=\"#resourcefilter在业务上能用来做什么\">#</a> ResourceFilter 在业务上能用来做什么</h3>\n<p><code>缓存</code></p>\n<p>下面缓存的代码以异步实现</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class CustomAsyncResourceFilterAttribute : Attribute, IAsyncResourceFilter</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        public async Task OnResourceExecutionAsync (ResourceExecutingContext context, ResourceExecutionDelegate next)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            Console.WriteLine (&quot;执行之前 Async&quot;);</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            string requestPath &#x3D; context.HttpContext.Request.Path;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            bool sign &#x3D; await RedisHelper.Do (d &#x3D;&gt; d.KeyExistsAsync (requestPath));</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            if (sign)</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                string  value &#x3D; await RedisHelper.StringGetAsync (requestPath);</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                &#x2F;&#x2F; 类似于短路。context.Result 赋值后就会终止</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                context.Result &#x3D; new JsonResult (value);</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            else</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            &#123;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                &#x2F;&#x2F; 获取 action 中的结果</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                ResourceExecutedContext resource &#x3D; await next.Invoke ();</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                dynamic Result &#x3D; resource.Result;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                &#x2F;&#x2F; 缓存 20 秒</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                await RedisHelper.StringSetAsync (requestPath, Result.Value, TimeSpan.FromSeconds (20));</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                string value &#x3D; await RedisHelper.StringGetAsync (requestPath);</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                Console.WriteLine (value);</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            Console.WriteLine (&quot;执行之后 Async&quot;);</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    &#125;</pre></td></tr></table></figure><p>上面 RedisHelper 的操作类库是自己封装了一下，方便调用。<span class=\"exturl\" data-url=\"aHR0cDovLzEwNi43NS4yNDQuNzU6OTAwMi9wYWNrYWdlcy90ZWFwdXMucmVkaXMvMS4wLjA=\">redis 的 nuget 地址</span>如果服务器还没有过期</p>\n",
            "tags": [
                "Asp.net Core",
                "Asp.net Core"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2022/06/09/hexo-shoka%E4%B8%ADcdn.jsdelivr.net%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD/",
            "url": "https://pustea-wls.github.io/2022/06/09/hexo-shoka%E4%B8%ADcdn.jsdelivr.net%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD/",
            "title": "hexo-shoka中cdn.jsdelivr.net无法加载",
            "date_published": "2022-06-09T03:00:00.000Z",
            "content_html": "<p><code>最近访问博客后发现页面加载不出来,经过F12查看后发现是cdn.jsdelivr.net服务器挂了导致相关js加载不出来</code></p>\n<h2 id=\"问题解决\"><a class=\"anchor\" href=\"#问题解决\">#</a> 问题解决</h2>\n<h3 id=\"assetjs-文件\"><a class=\"anchor\" href=\"#assetjs-文件\">#</a> asset.js 文件</h3>\n<p>文件地址 Blog\\themes\\shoka\\scripts\\helpers\\asset.js<br />\n 将 <code>cdn.jsdelivr.net</code>  替换成  <code>fastly.jsdelivr.net</code></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#x2F;&#x2F;cdn.jsdelivr.net 被墙无法访问</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  &#x2F;&#x2F;let result &#x3D; vendorJs ? &#96;&lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;combine&#x2F;$&#123;vendorJs&#125;&quot;&gt;&lt;&#x2F;script&gt;&#96; : &#39;&#39;;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  &#x2F;&#x2F;return vendorJs ? htmlTag (&#39;script&#39;, &#123; src: &#96;&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;combine&#x2F;$&#123;vendorJs&#125;&#96; &#125;, &#39;&#39;) : &#39;&#39;;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  let result &#x3D; vendorJs ? &#96;&lt;script src&#x3D;&quot;&#x2F;&#x2F;fastly.jsdelivr.net&#x2F;combine&#x2F;$&#123;vendorJs&#125;&quot;&gt;&lt;&#x2F;script&gt;&#96; : &#39;&#39;;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  return vendorJs ? htmlTag (&#39;script&#39;, &#123; src: &#96;&#x2F;&#x2F;fastly.jsdelivr.net&#x2F;combine&#x2F;$&#123;vendorJs&#125;&#96; &#125;, &#39;&#39;) : &#39;&#39;;</pre></td></tr></table></figure>",
            "tags": [
                "Others",
                "Others"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2021/11/10/aspnetcore%E9%83%A8%E7%BD%B2%E5%88%B0linux/",
            "url": "https://pustea-wls.github.io/2021/11/10/aspnetcore%E9%83%A8%E7%BD%B2%E5%88%B0linux/",
            "title": "将aspnetcore项目部署到Centos8",
            "date_published": "2021-11-10T07:00:00.000Z",
            "content_html": "<p><code>aspNetCore 跨平台之后，自己弄了一台Linux服务器。想着部署到上面试试看。作为之前从未接触Linux的小白。一番折腾可不容易，记录下方便以后查阅</code></p>\n<h2 id=\"使用docker生成镜像后部署\"><a class=\"anchor\" href=\"#使用docker生成镜像后部署\">#</a> 使用 Docker 生成镜像后部署</h2>\n<p>我当前的这台服务器的版本是 <code>Centos8.3</code></p>\n<p>1. 首先我们打开自己要部署的项目，使用 vs 生成一个 DockerFile 文件</p>\n<p><img data-src=\"1.jpg\" alt=\"\" /></p>\n<p>因为我本地也已经安装过 Docker 了，所以我现在本地尝试一下</p>\n<h6 id=\"生成一个镜像\"><a class=\"anchor\" href=\"#生成一个镜像\">#</a> 生成一个镜像</h6>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker build -t aspnetcore:v1</pre></td></tr></table></figure><p>在这命令就踩了很多坑，最后发现默认生成的 DockFile 文件是在当前这个文件夹下面 (这边没有我已经将他去除)<br />\n<img data-src=\"2.jpg\" alt=\"\" /><br />\n <code>我们将DockerFile文件向上移动一级和.sln文件同级</code> 这样就可以成功了<br />\n<img data-src=\"7.jpg\" alt=\"\" /></p>\n<h6 id=\"运行一个容器\"><a class=\"anchor\" href=\"#运行一个容器\">#</a> 运行一个容器</h6>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker run -d -p 8000:80 --name aspnetcoreclient aspnetcore:v1</pre></td></tr></table></figure><p>本地运行成功<br />\n<img data-src=\"3.jpg\" alt=\"\" /></p>\n<h2 id=\"部署到linux服务器上\"><a class=\"anchor\" href=\"#部署到linux服务器上\">#</a> 部署到 Linux 服务器上</h2>\n<p>作为一个 Linux 小白一些命令只能从基础学起</p>\n<h3 id=\"以下一些命令需要你已经安装了docker\"><a class=\"anchor\" href=\"#以下一些命令需要你已经安装了docker\">#</a> 以下一些命令需要你已经安装了 Docker</h3>\n<h6 id=\"linux安装-lrzsz下载文件\"><a class=\"anchor\" href=\"#linux安装-lrzsz下载文件\">#</a> Linux 安装 lrzsz (下载文件)</h6>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum install -y lrzsz</pre></td></tr></table></figure><h6 id=\"如何将本地文件上传到服务器上windows上传到linux\"><a class=\"anchor\" href=\"#如何将本地文件上传到服务器上windows上传到linux\">#</a> 如何将本地文件上传到服务器上 (windows 上传到 Linux)</h6>\n<p>在这里我连接服务器的软件是 Xshell 6<br />\n<img data-src=\"4.jpg\" alt=\"\" /><br />\n 将要上传的文件夹压缩后就可以上传了<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcXRpZ2VyL3AvMTM4NDYwNzAuaHRtbA==\">具体的操作流程</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcXRpZ2VyL3AvMTM4NDcyNDUuaHRtbA==\"> Linux 服务器上安装解压 rar 安装包操作步骤</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1JhaW5ubmJvdy9hcnRpY2xlL2RldGFpbHMvNTA0MjA2MDQ=\"> Linux 文件基本命令</span></p>\n<p>在 Linux 执行命令后<br />\n<img data-src=\"5.jpg\" alt=\"\" /><br />\n当前是执行在 80 端口<br />\n<img data-src=\"6.jpg\" alt=\"\" /></p>\n<p>这就是一个最简单的 asp.netCore 的发布到 Linux 的过程</p>\n",
            "tags": [
                "Docker",
                "Docker"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2021/08/30/Iview%E4%B8%AD%E7%9A%84tree%E7%BB%84%E4%BB%B6/",
            "url": "https://pustea-wls.github.io/2021/08/30/Iview%E4%B8%AD%E7%9A%84tree%E7%BB%84%E4%BB%B6/",
            "title": "使用递归遍历树形菜单下面的所有子节点",
            "date_published": "2021-08-30T00:37:49.000Z",
            "content_html": "<p>在 Iview 中使用 tree 组件遍历菜单下面的所有子节点</p>\n<h3 id=\"菜单表的数据结构\"><a class=\"anchor\" href=\"#菜单表的数据结构\">#</a> 菜单表的数据结构</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[Key]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  public int Id &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  &#x2F;&#x2F; 模块</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  public string? ModuleCode &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  &#x2F;&#x2F; 类型</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  public int? Type &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  &#x2F;&#x2F; 父级</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  public int? ParentId &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  &#x2F;&#x2F; 名称</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  public string? Name &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  ......</pre></td></tr></table></figure><p><code>上面展示了菜单表的部分字段,在这里我们主要关注两个字段:Id,ParentId。上下菜单级的关联主要用到这个字段。当菜单无上级时。ParentId为-1</code></p>\n<h3 id=\"绑定到页面的数据结构\"><a class=\"anchor\" href=\"#绑定到页面的数据结构\">#</a> 绑定到页面的数据结构</h3>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      baseData<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>          expand<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>          title<span class=\"token operator\">:</span> <span class=\"token string\">\"菜单管理\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>          children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h3 id=\"初始化一级菜单\"><a class=\"anchor\" href=\"#初始化一级菜单\">#</a> 初始化一级菜单</h3>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token function\">loadInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://localhost:5001/api/Query\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        pageSize<span class=\"token operator\">:</span> <span class=\"token number\">99999</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        pageIndex<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 遍历一级菜单</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">curr<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curr<span class=\"token punctuation\">.</span>parentId <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          <span class=\"token keyword\">var</span> children <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">childernTree</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> curr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          <span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            title<span class=\"token operator\">:</span> curr<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            expand<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            children<span class=\"token operator\">:</span> children<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h3 id=\"递归遍历下面的所有子节点\"><a class=\"anchor\" href=\"#递归遍历下面的所有子节点\">#</a> 递归遍历下面的所有子节点</h3>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">childernTree</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> arry<span class=\"token punctuation\">,</span> arryChildren</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token comment\">// 找到当前当前子节点的下一级</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">curr<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> childrenArr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> curr<span class=\"token punctuation\">.</span>parentId <span class=\"token operator\">==</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     <span class=\"token comment\">// 递归出口</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> arry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      result<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">curr<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> arr1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arry<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 核心 (向后面的子节点插入数据)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          arryChildren<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            title<span class=\"token operator\">:</span> curr<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            expand<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          arry <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>              title<span class=\"token operator\">:</span> curr<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>              expand<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>              children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>          <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          arryChildren <span class=\"token operator\">=</span> arry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 当有多个同级菜单</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arry<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>          arry<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            title<span class=\"token operator\">:</span> curr<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            expand<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>          arryChildren <span class=\"token operator\">=</span> arry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">childernTree</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> curr<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> arry<span class=\"token punctuation\">,</span> arryChildren<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token keyword\">return</span> arry<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h3 id=\"数据库中的数据\"><a class=\"anchor\" href=\"#数据库中的数据\">#</a> 数据库中的数据</h3>\n<p><img data-src=\"vue-tree-1.png\" alt=\"\" /></p>\n<h3 id=\"渲染到页面的数据\"><a class=\"anchor\" href=\"#渲染到页面的数据\">#</a> 渲染到页面的数据</h3>\n<p><img data-src=\"vue-tree-2.png\" alt=\"\" /></p>\n",
            "tags": [
                "Vue",
                "Vue"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2021/08/28/Iview%E4%B8%AD%E7%9A%84%E6%A8%A1%E6%80%81%E6%A1%86/",
            "url": "https://pustea-wls.github.io/2021/08/28/Iview%E4%B8%AD%E7%9A%84%E6%A8%A1%E6%80%81%E6%A1%86/",
            "title": "在render函数中使用this.$Modal.confirm模态框访问不到当前vue组件实例(this指向问题)",
            "date_published": "2021-08-28T10:58:00.000Z",
            "content_html": "<p>有一个小的功能在 iview 的 table 组件中。点击删除后弹出一个模态框，接着点击确定后删除数据。<br />\n在用 render 函数时遇到一个小的问题</p>\n<h2 id=\"初始化页面数据\"><a class=\"anchor\" href=\"#初始化页面数据\">#</a> 初始化页面数据</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token function\">loadInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"https://localhost:5001/api/Query\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><h2 id=\"render函数中删除数据\"><a class=\"anchor\" href=\"#render函数中删除数据\">#</a> Render 函数中删除数据</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>on<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">click</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Modal<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        title<span class=\"token operator\">:</span> <span class=\"token string\">\"确定删除吗？\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">async</span> <span class=\"token function\">onOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token keyword\">var</span> <span class=\"token punctuation\">&#123;</span> code <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            method<span class=\"token punctuation\">.</span><span class=\"token constant\">DELETE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"https://localhost:5001/api/Delete\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p><img data-src=\"vue-1.png\" alt=\"\" /></p>\n<h2 id=\"将click方法修改\"><a class=\"anchor\" href=\"#将click方法修改\">#</a> 将 Click 方法修改</h2>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>on<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function-variable function\">click</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Modal<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 接受外面的变量</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">let</span> loadInit <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>loadInit<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        title<span class=\"token operator\">:</span> <span class=\"token string\">\"确定删除吗？\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">async</span> <span class=\"token function\">onOk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">var</span> <span class=\"token punctuation\">&#123;</span> code <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            method<span class=\"token punctuation\">.</span><span class=\"token constant\">DELETE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token string\">\"https://localhost:5001/api/Delete\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#123;</span> id<span class=\"token operator\">:</span> row<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>code <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function\">loadInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$Message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"删除成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>             <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure>",
            "tags": [
                "Vue",
                "Vue"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2021/08/14/hello-world/",
            "url": "https://pustea-wls.github.io/2021/08/14/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-14T10:08:00.000Z",
            "content_html": "<p><code>I can do all things</code></p>\n",
            "tags": [
                "Net"
            ]
        },
        {
            "id": "https://pustea-wls.github.io/2021/08/14/Net/Net5/",
            "url": "https://pustea-wls.github.io/2021/08/14/Net/Net5/",
            "title": "如何在Asp.net Core启动的时候，操作数据库",
            "date_published": "2021-08-14T10:08:00.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cDovL3huLS1Bc3AtbHA2ZTk3M2Vzbng5d2RzNDdjLm5ldA==\">最近在研究 Asp.net</span> Core 基于 JWT 授权码模式去实现策略授权 (根据用户的角色动态判断是否拥有对访问接口的权限). 在完成 jwt 的授权码和模拟用户，角色等数据后，想着去在策略授权的时候直接去访问数据库的数据。发现这并不容易。查找一些资料后</p>\n<h3 id=\"核心代码\"><a class=\"anchor\" href=\"#核心代码\">#</a> 核心代码</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#x2F;&#x2F; 连接字符串</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> services.AddDbContext&lt;JWTContext&gt;(options &#x3D;&gt;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> options.UseSqlServer (Configuration.GetConnectionString (&quot;JWTDBConnection&quot;)));</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> services.AddScoped&lt;IAppSettings, AppSettings&gt;();</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> &#x2F;&#x2F; 读取数据库配置策略授权 (重点)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> services.AddOptions&lt;AuthorizationOptions&gt;().Configure&lt;IServiceScopeFactory&gt;((options, sp) &#x3D;&gt;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    using (var scope &#x3D; sp.CreateScope ())</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        IAppSettings settings &#x3D; scope.ServiceProvider.GetRequiredService&lt;IAppSettings&gt;();</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        var Permission &#x3D; settings.userPermissions ();</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        options.AddPolicy (&quot;Permission&quot;, policy &#x3D;&gt; policy.Requirements.Add (Permission));</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>&#125;);</pre></td></tr></table></figure><p>查看上面的代码我们可以发现，在连接数据的下面。我们让容器中注入了一个服务:<br />\n <code>services.AddScoped&lt;IAppSettings, AppSettings&gt;()</code></p>\n<h3 id=\"定义接口\"><a class=\"anchor\" href=\"#定义接口\">#</a> 定义接口</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public interface IAppSettings  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> &#123;  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      PolicyRequirement userPermissions();  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre> &#125;</pre></td></tr></table></figure><h3 id=\"实现接口\"><a class=\"anchor\" href=\"#实现接口\">#</a> 实现接口</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class AppSettings:IAppSettings</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        public JWTContext context;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        public AppSettings(JWTContext context)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            this.context &#x3D; context;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        public PolicyRequirement userPermissions()</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            PolicyRequirement policyRequirement &#x3D; new PolicyRequirement();</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            var _jWTContext &#x3D; context;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            var perssions &#x3D; _jWTContext.permssions;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            var roles &#x3D; _jWTContext.roles;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            policyRequirement.DeniedAction &#x3D; new PathString(&quot;&#x2F;api&#x2F;nopermission&quot;);</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            policyRequirement.UserPermissions &#x3D; (from r in roles</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                               join p in perssions</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                               on r.Id equals p.RoleId</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                               select new UserPermission</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                               &#123;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                   UserName &#x3D; r.Name,</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                   Url &#x3D; &quot;&#x2F;WeatherForecast&quot; + p.Permssions</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                               &#125;).ToList();</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            return policyRequirement;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        &#125;</pre></td></tr></table></figure><h3 id=\"策略授权的核心代码\"><a class=\"anchor\" href=\"#策略授权的核心代码\">#</a> 策略授权的核心代码</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class PolicyRequirement: IAuthorizationRequirement</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        &#x2F;&#x2F;&#x2F; 用户权限集合</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        public List&lt;UserPermission&gt; UserPermissions &#123; get;  set; &#125;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        &#x2F;&#x2F;&#x2F; 无权限 action</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        public string DeniedAction &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        &#x2F;&#x2F;&#x2F; 构造</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        public PolicyRequirement ()</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            &#x2F;&#x2F; 没有权限则跳转到这个路由</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            DeniedAction &#x3D; new PathString (&quot;&#x2F;api&#x2F;nopermission&quot;);</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            &#x2F;&#x2F; 用户有权限访问的路由配置，当然可以从数据库获取</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            UserPermissions &#x3D; new List&lt;UserPermission&gt; &#123;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                              new UserPermission &#123;  Url&#x3D;&quot;&#x2F;WeatherForecast&#x2F;Tourist&quot;, UserName&#x3D;&quot;user&quot;&#125;,</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                          &#125;;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    &#x2F;&#x2F;&#x2F; 用户权限承载实体</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    public class UserPermission</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        &#x2F;&#x2F;&#x2F; 用户名</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        public string UserName &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        &#x2F;&#x2F;&#x2F; 请求 Url</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        public string Url &#123; get; set; &#125;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    &#125;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>public class PolicyHandler : AuthorizationHandler&lt;PolicyRequirement&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    &#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        protected override Task HandleRequirementAsync (AuthorizationHandlerContext context, PolicyRequirement requirement)</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        &#123;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            &#x2F;&#x2F;var httpContext &#x3D; ((context.Resource) as Microsoft.AspNetCore.Routing.RouteEndpoint);</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            &#x2F;&#x2F;dynamic httpContext &#x3D; context.Resource;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            var httpContext &#x3D; context.Resource as HttpContext;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            var questUrl &#x3D; httpContext.Request.Path.Value;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            &#x2F;&#x2F; 赋值用户权限</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            var userPermissions &#x3D; requirement.UserPermissions;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            &#x2F;&#x2F; 是否经过验证</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            var isAuthenticated &#x3D; context.User.Identity.IsAuthenticated;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            if (isAuthenticated)</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            &#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                if (userPermissions.GroupBy (g &#x3D;&gt; g.Url).Any (w &#x3D;&gt; w.Key &#x3D;&#x3D; questUrl))</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                &#123;</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    &#x2F;&#x2F; 用户名</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    var userName &#x3D; context.User.Claims.Where (x&#x3D;&gt;x.Type&#x3D;&#x3D;&quot;roless&quot;).First ().Value;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    if (userPermissions.Any (w &#x3D;&gt; w.UserName &#x3D;&#x3D; userName &amp;&amp; w.Url&#x3D;&#x3D; questUrl))</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                    &#123;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                        context.Succeed (requirement);</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    else</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    &#123;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        &#x2F;&#x2F; 无权限跳转到拒绝页面</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                        &#x2F;&#x2F;context.Fail ();</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                        &#x2F;&#x2F;httpContext.Response.Redirect (&quot;https:&#x2F;&#x2F;localhost:5001&#x2F;api&#x2F;nopermission&quot;);</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        context.Fail ();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        var Response &#x3D; httpContext.Response;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                        var message &#x3D; Encoding.UTF8.GetBytes (&quot;User with Super Admin role cannot be edited&quot;);</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                        Response.OnStarting (async () &#x3D;&gt;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                        &#123;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                            httpContext.Response.StatusCode &#x3D; 429;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                            await Response.Body.WriteAsync (message, 0, message.Length);</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                        &#125;);</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    &#125;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                &#125;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                else</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                &#123;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    context.Succeed (requirement);</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                &#125;</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            return Task.CompletedTask;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    &#125;</pre></td></tr></table></figure>",
            "tags": [
                "Net",
                "Asp.net Core",
                "Net"
            ]
        }
    ]
}